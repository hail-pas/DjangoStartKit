# Generated by Django 3.2.9 on 2022-10-28 14:24

import django.utils.timezone
import django.db.models.deletion
import django.contrib.auth.models
from django.db import models, migrations
from django.conf import settings

import common.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Profile",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                ("last_login", models.DateTimeField(blank=True, null=True, verbose_name="last login")),
                ("create_time", models.DateTimeField(auto_now_add=True, help_text="创建时间", verbose_name="创建时间")),
                ("update_time", models.DateTimeField(auto_now=True, help_text="更新时间", verbose_name="更新时间")),
                (
                    "delete_time",
                    models.DateTimeField(blank=True, editable=False, help_text="删除时间", null=True, verbose_name="删除时间"),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("username", models.CharField(help_text="用户名, 最长128", max_length=128, verbose_name="用户名")),
                (
                    "phone",
                    models.CharField(
                        error_messages={"unique": "使用该手机号的用户已存在"},
                        help_text="电话",
                        max_length=11,
                        unique=True,
                        verbose_name="电话",
                    ),
                ),
                ("first_name", models.CharField(blank=True, max_length=150, verbose_name="first name")),
                ("last_name", models.CharField(blank=True, max_length=150, verbose_name="last name")),
                ("email", models.EmailField(blank=True, max_length=254, verbose_name="email address")),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                ("date_joined", models.DateTimeField(default=django.utils.timezone.now, verbose_name="date joined")),
                ("nickname", models.CharField(default="", help_text="昵称", max_length=128, verbose_name="昵称")),
                (
                    "avatar",
                    models.FileField(blank=True, null=True, upload_to=common.utils.file_upload_to, verbose_name="头像"),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("male", "男"), ("female", "女")],
                        default="male",
                        help_text="性别",
                        max_length=24,
                        verbose_name="性别",
                    ),
                ),
                (
                    "operator",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        help_text="操作人",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "polymorphic_ctype",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="polymorphic_relational.profile_set+",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "用户",
                "verbose_name_plural": "用户",
                "abstract": False,
                "swappable": "AUTH_USER_MODEL",
            },
        ),
        migrations.CreateModel(
            name="Config",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("create_time", models.DateTimeField(auto_now_add=True, help_text="创建时间", verbose_name="创建时间")),
                ("update_time", models.DateTimeField(auto_now=True, help_text="更新时间", verbose_name="更新时间")),
                (
                    "delete_time",
                    models.DateTimeField(blank=True, editable=False, help_text="删除时间", null=True, verbose_name="删除时间"),
                ),
                ("key", models.CharField(help_text="配置key", max_length=48, unique=True, verbose_name="key")),
                ("value", models.JSONField(help_text="配置内容", verbose_name="value")),
            ],
            options={"verbose_name": "在线配置", "verbose_name_plural": "在线配置",},
        ),
        migrations.CreateModel(
            name="Dialog",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("create_time", models.DateTimeField(auto_now_add=True, help_text="创建时间", verbose_name="创建时间")),
                ("update_time", models.DateTimeField(auto_now=True, help_text="更新时间", verbose_name="更新时间")),
                (
                    "delete_time",
                    models.DateTimeField(blank=True, editable=False, help_text="删除时间", null=True, verbose_name="删除时间"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("enable", "启用"), ("disable", "禁用")],
                        default="enable",
                        help_text="状态",
                        max_length=16,
                        verbose_name="状态",
                    ),
                ),
                (
                    "left_user",
                    models.ForeignKey(
                        help_text="用户",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="as_left_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
                (
                    "right_user",
                    models.ForeignKey(
                        help_text="用户",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="as_right_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={"verbose_name": "私聊", "verbose_name_plural": "私聊",},
        ),
        migrations.CreateModel(
            name="Group",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("create_time", models.DateTimeField(auto_now_add=True, help_text="创建时间", verbose_name="创建时间")),
                ("update_time", models.DateTimeField(auto_now=True, help_text="更新时间", verbose_name="更新时间")),
                (
                    "delete_time",
                    models.DateTimeField(blank=True, editable=False, help_text="删除时间", null=True, verbose_name="删除时间"),
                ),
                ("label", models.CharField(help_text="名称", max_length=32, verbose_name="名称")),
                (
                    "order_weight",
                    models.CharField(default="0", help_text="排序比重，越大越前", max_length=16, verbose_name="排序比重"),
                ),
                ("count", models.IntegerField(default=0, help_text="人数", verbose_name="人数")),
                ("cover", models.FileField(blank=True, upload_to=common.utils.file_upload_to, verbose_name="封面")),
                ("description", models.CharField(default="", help_text="简介", max_length=255, verbose_name="简介")),
                ("is_official", models.BooleanField(default=False, help_text="是否官方圈子", verbose_name="是否官方圈子")),
                (
                    "creator",
                    models.ForeignKey(
                        help_text="用户",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_groups",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={"verbose_name": "圈子", "verbose_name_plural": "圈子", "ordering": ["-order_weight"],},
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("create_time", models.DateTimeField(auto_now_add=True, help_text="创建时间", verbose_name="创建时间")),
                ("update_time", models.DateTimeField(auto_now=True, help_text="更新时间", verbose_name="更新时间")),
                (
                    "delete_time",
                    models.DateTimeField(blank=True, editable=False, help_text="删除时间", null=True, verbose_name="删除时间"),
                ),
                (
                    "remark",
                    models.CharField(blank=True, default="", help_text="备注说明", max_length=128, verbose_name="备注"),
                ),
                ("name", models.CharField(max_length=150, unique=True, verbose_name="name")),
                (
                    "preserved",
                    models.BooleanField(
                        default=False, help_text="是否系统保留角色: ['anonymous', 'user']", verbose_name="是否系统保留角色"
                    ),
                ),
            ],
            options={"verbose_name": "角色", "verbose_name_plural": "角色",},
            managers=[("objects", django.contrib.auth.models.GroupManager()),],
        ),
        migrations.CreateModel(
            name="ThirdService",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("create_time", models.DateTimeField(auto_now_add=True, help_text="创建时间", verbose_name="创建时间")),
                ("update_time", models.DateTimeField(auto_now=True, help_text="更新时间", verbose_name="更新时间")),
                (
                    "delete_time",
                    models.DateTimeField(blank=True, editable=False, help_text="删除时间", null=True, verbose_name="删除时间"),
                ),
                ("label", models.CharField(help_text="名称标识", max_length=32, verbose_name="名称标识")),
                ("identifier", models.CharField(help_text="唯一标识", max_length=64, unique=True, verbose_name="唯一标识")),
                ("api_key", models.CharField(help_text="api key", max_length=64, verbose_name="api key")),
                ("sign_key", models.CharField(help_text="签名key", max_length=64, verbose_name="sign key")),
                (
                    "protocol",
                    models.CharField(
                        choices=[("https", "https"), ("http", "http"), ("rpc", "rpc")], default="http", max_length=16
                    ),
                ),
                ("host", models.CharField(help_text="Host不带端口", max_length=255, verbose_name="Host")),
                ("port", models.IntegerField(blank=True, help_text="端口", null=True, verbose_name="端口")),
            ],
            options={"verbose_name": "三方服务", "verbose_name_plural": "三方服务", "ordering": ["id"],},
        ),
        migrations.CreateModel(
            name="UploadedFile",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("label", models.CharField(help_text="名称", max_length=32, verbose_name="名称")),
                ("file", models.FileField(upload_to=common.utils.file_upload_to, verbose_name="文件")),
                ("name", models.CharField(blank=True, help_text="文件名", max_length=64, null=True, verbose_name="文件名")),
                (
                    "extension",
                    models.CharField(blank=True, help_text="文件后缀", max_length=32, null=True, verbose_name="文件后缀"),
                ),
                ("size", models.IntegerField(default=0, help_text="文件大小", verbose_name="文件大小")),
                ("create_time", models.DateTimeField(auto_now_add=True, help_text="创建时间", verbose_name="创建时间")),
                (
                    "profile",
                    models.ForeignKey(
                        help_text="用户",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={"verbose_name": "聊天上传文件", "verbose_name_plural": "聊天上传文件",},
        ),
        migrations.CreateModel(
            name="SystemResource",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("create_time", models.DateTimeField(auto_now_add=True, help_text="创建时间", verbose_name="创建时间")),
                ("update_time", models.DateTimeField(auto_now=True, help_text="更新时间", verbose_name="更新时间")),
                (
                    "delete_time",
                    models.DateTimeField(blank=True, editable=False, help_text="删除时间", null=True, verbose_name="删除时间"),
                ),
                ("label", models.CharField(help_text="名称", max_length=32, verbose_name="名称")),
                (
                    "remark",
                    models.CharField(blank=True, default="", help_text="备注说明", max_length=128, verbose_name="备注"),
                ),
                (
                    "code",
                    models.CharField(help_text="标识编码，冒号标识层级 {parent}:{current}", max_length=64, verbose_name="标识编码"),
                ),
                (
                    "route_path",
                    models.CharField(blank=True, help_text="前端路由", max_length=128, null=True, verbose_name="前端路由"),
                ),
                (
                    "icon_path",
                    models.CharField(blank=True, help_text="图标", max_length=128, null=True, verbose_name="图标"),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("menu", "菜单"), ("button", "按钮"), ("api", "接口")],
                        help_text="组类型",
                        max_length=16,
                        verbose_name="资源类型",
                    ),
                ),
                ("order_num", models.IntegerField(default=1, help_text="排列序号", verbose_name="排列序号")),
                ("enabled", models.BooleanField(default=True, help_text="当前分组是否可用", verbose_name="启用状态")),
                ("assignable", models.BooleanField(default=True, help_text="配置时是否可分配", verbose_name="是否可配置")),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        help_text="父级",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="relational.systemresource",
                        verbose_name="父级",
                    ),
                ),
                (
                    "permissions",
                    models.ManyToManyField(blank=True, help_text="权限", to="auth.Permission", verbose_name="权限"),
                ),
                (
                    "reference_to",
                    models.ForeignKey(
                        blank=True,
                        help_text="跳转关联节点",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reference_from",
                        to="relational.systemresource",
                        verbose_name="跳转关联节点",
                    ),
                ),
            ],
            options={
                "verbose_name": "系统资源",
                "verbose_name_plural": "系统资源",
                "ordering": ["order_num"],
                "permissions": [],
                "unique_together": {("code", "parent")},
            },
        ),
        migrations.CreateModel(
            name="System",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("create_time", models.DateTimeField(auto_now_add=True, help_text="创建时间", verbose_name="创建时间")),
                ("update_time", models.DateTimeField(auto_now=True, help_text="更新时间", verbose_name="更新时间")),
                (
                    "delete_time",
                    models.DateTimeField(blank=True, editable=False, help_text="删除时间", null=True, verbose_name="删除时间"),
                ),
                ("label", models.CharField(help_text="名称", max_length=32, verbose_name="名称")),
                (
                    "remark",
                    models.CharField(blank=True, default="", help_text="备注说明", max_length=128, verbose_name="备注"),
                ),
                ("code", models.CharField(help_text="唯一标识", max_length=16, unique=True, verbose_name="唯一标识")),
                (
                    "roles",
                    models.ManyToManyField(
                        blank=True, help_text="角色", related_name="systems", to="relational.Role", verbose_name="角色"
                    ),
                ),
                (
                    "system_resources",
                    models.ManyToManyField(
                        blank=True,
                        help_text="系统资源",
                        related_name="systems",
                        to="relational.SystemResource",
                        verbose_name="系统资源",
                    ),
                ),
                (
                    "users",
                    models.ManyToManyField(
                        blank=True,
                        help_text="用户",
                        related_name="systems",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={"verbose_name": "系统", "verbose_name_plural": "系统",},
        ),
        migrations.AddField(
            model_name="role",
            name="system_resources",
            field=models.ManyToManyField(
                blank=True, help_text="系统资源", related_name="roles", to="relational.SystemResource", verbose_name="系统资源"
            ),
        ),
        migrations.CreateModel(
            name="PermissionRelation",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "relation",
                    models.CharField(
                        choices=[("exclusive", "互斥"), ("dependent", "依赖"), ("inclusive", "包含")],
                        help_text="组类型",
                        max_length=16,
                        verbose_name="关系",
                    ),
                ),
                (
                    "permission_a",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="relation_as_a", to="auth.permission"
                    ),
                ),
                (
                    "permission_b",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="relation_as_b", to="auth.permission"
                    ),
                ),
            ],
            options={"verbose_name": "权限关系", "verbose_name_plural": "权限关系",},
        ),
        migrations.CreateModel(
            name="GroupMessage",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("text", "文本"),
                            ("picture", "图片"),
                            ("video", "视频"),
                            ("audio", "音频"),
                            ("file", "文件"),
                            ("location", "定位"),
                            ("share", "分享"),
                        ],
                        default="text",
                        help_text="消息类型",
                        max_length=16,
                        verbose_name="消息类型",
                    ),
                ),
                ("value", models.JSONField(help_text="消息体", verbose_name="消息体")),
                (
                    "create_time",
                    models.DateTimeField(auto_now_add=True, db_index=True, help_text="创建时间", verbose_name="创建时间"),
                ),
                (
                    "group",
                    models.ForeignKey(
                        help_text="圈子",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="relational.group",
                        verbose_name="圈子",
                    ),
                ),
                (
                    "profile",
                    models.ForeignKey(
                        help_text="用户",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={"verbose_name": "群聊消息记录", "verbose_name_plural": "群聊消息记录", "ordering": ["-id"],},
        ),
        migrations.CreateModel(
            name="GroupMembership",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("create_time", models.DateTimeField(auto_now_add=True, help_text="创建时间", verbose_name="创建时间")),
                ("update_time", models.DateTimeField(auto_now=True, help_text="更新时间", verbose_name="更新时间")),
                (
                    "delete_time",
                    models.DateTimeField(blank=True, editable=False, help_text="删除时间", null=True, verbose_name="删除时间"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("enable", "启用"), ("disable", "禁用")],
                        default="enable",
                        help_text="状态",
                        max_length=16,
                        verbose_name="状态",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        help_text="圈子",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="relational.group",
                        verbose_name="圈子",
                    ),
                ),
                (
                    "profile",
                    models.ForeignKey(
                        help_text="用户",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={"verbose_name": "圈子与用户", "verbose_name_plural": "圈子与用户",},
        ),
        migrations.CreateModel(
            name="FollowRelation",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("create_time", models.DateTimeField(auto_now_add=True, help_text="创建时间", verbose_name="创建时间")),
                ("update_time", models.DateTimeField(auto_now=True, help_text="更新时间", verbose_name="更新时间")),
                (
                    "delete_time",
                    models.DateTimeField(blank=True, editable=False, help_text="删除时间", null=True, verbose_name="删除时间"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("enable", "启用"), ("disable", "禁用")],
                        default="enable",
                        help_text="状态",
                        max_length=16,
                        verbose_name="状态",
                    ),
                ),
                (
                    "followed",
                    models.ForeignKey(
                        help_text="关注人",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="following",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="关注人",
                    ),
                ),
                (
                    "followee",
                    models.ForeignKey(
                        help_text="被关注人",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="follower",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="被关注人",
                    ),
                ),
            ],
            options={"verbose_name": "用户关注关系表", "verbose_name_plural": "用户关注关系表",},
        ),
        migrations.CreateModel(
            name="DialogMessage",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("text", "文本"),
                            ("picture", "图片"),
                            ("video", "视频"),
                            ("audio", "音频"),
                            ("file", "文件"),
                            ("location", "定位"),
                            ("share", "分享"),
                        ],
                        default="text",
                        help_text="消息类型",
                        max_length=16,
                        verbose_name="消息类型",
                    ),
                ),
                ("value", models.JSONField(help_text="消息体", verbose_name="消息体")),
                (
                    "create_time",
                    models.DateTimeField(auto_now_add=True, db_index=True, help_text="创建时间", verbose_name="创建时间"),
                ),
                ("read", models.BooleanField(default=False, help_text="是否已读", verbose_name="是否已读")),
                (
                    "dialog",
                    models.ForeignKey(
                        help_text="好友关系",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="relational.dialog",
                        verbose_name="好友关系",
                    ),
                ),
                (
                    "receiver",
                    models.ForeignKey(
                        help_text="用户",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_message",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        help_text="用户",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_message",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={"verbose_name": "私聊消息记录", "verbose_name_plural": "私聊消息记录", "ordering": ["-id"],},
        ),
        migrations.AddField(
            model_name="profile",
            name="roles",
            field=models.ManyToManyField(
                blank=True, help_text="所属角色(int)", related_name="profiles", to="relational.Role", verbose_name="所属角色"
            ),
        ),
        migrations.AddField(
            model_name="profile",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="profile_set",
                related_query_name="profile",
                to="auth.Permission",
                verbose_name="user permissions",
            ),
        ),
        migrations.CreateModel(
            name="ReferenceProfile",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("create_time", models.DateTimeField(auto_now_add=True, help_text="创建时间", verbose_name="创建时间")),
                ("update_time", models.DateTimeField(auto_now=True, help_text="更新时间", verbose_name="更新时间")),
                (
                    "delete_time",
                    models.DateTimeField(blank=True, editable=False, help_text="删除时间", null=True, verbose_name="删除时间"),
                ),
                ("referenced_id", models.CharField(help_text="关联ID", max_length=64, verbose_name="关联ID")),
                (
                    "profile",
                    models.ForeignKey(
                        help_text="用户",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
                (
                    "third_service",
                    models.ForeignKey(
                        help_text="关联系统",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="relational.thirdservice",
                        verbose_name="关联系统",
                    ),
                ),
            ],
            options={
                "verbose_name": "三方服务用户ID关联",
                "verbose_name_plural": "三方服务用户ID关联",
                "unique_together": {("third_service", "profile")},
            },
        ),
        migrations.AddIndex(
            model_name="groupmembership", index=models.Index(fields=["group"], name="relational__group_i_32effd_idx"),
        ),
        migrations.AddIndex(
            model_name="groupmembership", index=models.Index(fields=["profile"], name="relational__profile_286509_idx"),
        ),
        migrations.AlterUniqueTogether(name="groupmembership", unique_together={("group", "profile")},),
        migrations.AddIndex(
            model_name="group", index=models.Index(fields=["label"], name="relational__label_5ccc28_idx"),
        ),
        migrations.AlterUniqueTogether(name="followrelation", unique_together={("followee", "followed")},),
        migrations.AlterUniqueTogether(
            name="dialog", unique_together={("right_user", "left_user"), ("left_user", "right_user")},
        ),
    ]
